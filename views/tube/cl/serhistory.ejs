<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>検索履歴</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { background-color: #1a202c; color: white; }
    </style>
</head>
<body class="p-6 flex justify-center items-center min-h-screen">
    <div class="w-full max-w-4xl bg-gray-800 p-6 rounded-lg shadow-lg">
        <h2 class="text-3xl font-bold mb-6 text-center">検索履歴</h2>
        
        <div class="mb-6 flex items-center justify-between bg-gray-700 p-4 rounded">
            <span class="text-lg">再生履歴をサジェストに表示</span>
            <label class="flex items-center">
                <input type="checkbox" id="historySuggest" class="mr-2 w-5 h-5">
            </label>
        </div>
        
        <ul id="historyList" class="space-y-4 max-h-80 overflow-y-auto p-2"></ul>
        
        <button id="clearHistory" class="mt-6 bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 w-full text-lg">
            履歴を全て削除
        </button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const historyList = document.getElementById("historyList");
            const clearHistoryBtn = document.getElementById("clearHistory");
            const historySuggest = document.getElementById("historySuggest");
            
            function loadHistory() {
                historyList.innerHTML = "";
                const searchHistory = JSON.parse(localStorage.getItem("searchHistory")) || [];
                searchHistory.forEach((query, index) => {
                    const li = document.createElement("li");
                    li.className = "flex justify-between items-center bg-gray-700 p-3 rounded text-lg";
                    li.innerHTML = `
                        <span class="truncate w-full">${query}</span>
                        <button onclick="deleteHistory(${index})" class="text-red-400 hover:text-red-600 text-xl">×</button>
                    `;
                    historyList.appendChild(li);
                });
            }
            
            function deleteHistory(index) {
                let searchHistory = JSON.parse(localStorage.getItem("searchHistory")) || [];
                searchHistory.splice(index, 1);
                localStorage.setItem("searchHistory", JSON.stringify(searchHistory));
                loadHistory();
            }
            
            clearHistoryBtn.addEventListener("click", function () {
                localStorage.removeItem("searchHistory");
                loadHistory();
            });
            
            historySuggest.checked = localStorage.getItem("historySuggest") === "true";
            historySuggest.addEventListener("change", function () {
                localStorage.setItem("historySuggest", historySuggest.checked);
            });
            
            loadHistory();
        });
    </script>
</body>
</html>
