<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= videoData.videoTitle %></title>
    <link rel="stylesheet" href="/css/page.css">
    <script src="/js/tailwindcss.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="/js/tube.js"></script>
    <script src="/js/watch.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            if (localStorage.getItem("sidebarHidden") === "true") {
                document.getElementById("sidebar").classList.add("hidden");
                document.getElementById("videoContainer").classList.add("full");
                document.getElementById("expandSidebar").classList.add("visible");
            }
        });
    </script>
    <style>
        .comment-box, .related-box {
            transform: translateX(100%);
            transition: transform 0.3s ease-in-out;
        }
        .comment-box.open, .related-box.open {
            transform: translateX(0);
        }
        .main-container {
            display: flex;
            transition: width 0.3s ease-in-out;
        }
        .video-container {
            width: 75%;
            transition: width 0.3s ease-in-out;
        }
        .video-container.full {
            width: 100%;
        }
        .sidebar {
            width: 25%;
            transition: transform 0.3s ease-in-out;
        }
        .sidebar.hidden {
            transform: translateX(100%);
        }
        .expand-sidebar-btn {
            position: fixed;
            bottom: 20px;
            right: 10px;
            background: #444;
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            display: none;
        }
        .expand-sidebar-btn.visible {
            display: block;
        }
        .toolbar {
            position: fixed;
            top: 0;
            right: -250px;
            width: 250px;
            height: 100%;
            background: #333;
            transition: right 0.3s;
            padding: 10px;
        }
        .toolbar.open { right: 0; }
        .toggle-btn { cursor: pointer; padding: 10px; background: #444; color: white; }
        .checkbox-container { display: flex; align-items: center; }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <header class="bg-gray-800 p-4 flex justify-between items-center">
            <form action="/wkt/s" method="get" class="w-1/2">
              <input type="text" name="q" id="searchbox" placeholder="検索" class="searchbox w-full p-2 rounded bg-gray-700 text-white">
            </form>
        <button id="toggleToolbar" class="toggle-btn">ツール</button>
    </header>
  
    <div class="toolbar" id="toolbar">
        <button id="closeToolbar" class="toggle-btn">閉じる</button>
        <nav>
            <a href="/wkt" class="block text-gray-300">ホーム</a>
            <a href="/wkt/trend" class="block text-gray-300">トレンド</a>
            <a href="/wkt/cl/history" class="block text-gray-300">履歴</a>
        </nav>
        <div class="mt-4">
            <div class="checkbox-container">
                <input type="checkbox" id="loopToggle">
                <label for="loopToggle" class="ml-2">ループ再生</label>
            </div>
            <div class="checkbox-container mt-2">
                <input type="checkbox" id="hdToggle">
                <label for="hdToggle" class="ml-2">高画質化</label>
            </div>
        </div>
    </div>
    
    <div class="max-w-6xl mx-auto p-4 main-container" id="mainContainer">
        <div class="video-container" id="videoContainer">
            <div class="relative">
        <video id="video" class="w-full h-auto" controls autoplay preload="auto" poster="/wkt/back/vi/<%= videoData.videoId %>/maxresdefault.jpg">
            <source id="videoSrc" src="<%- videoData.stream_url %>" type="video/mp4">
        </video>
        <audio id="audio" style="display: none;"></audio>
            </div>
            <div class="flex items-center mt-4 p-4 bg-gray-800 rounded">
              <a href ="wkt/c/<%= videoData.channelId %>">
                <img src="<%= videoData.channelImage %>" alt="アイコン" class="w-12 h-12 rounded-full">
              </a>
                <div class="ml-4">
                  <h2 class="text-lg font-bold"><a href ="wkt/c/<%= videoData.channelId %>"><%= videoData.channelName %></a></h2>
                    <p class="text-sm text-gray-400">登録者数</p>
                </div>
            </div>

    <div class="mt-4 p-4 bg-gray-800 rounded">
      <div class="mt-2 text-gray-400 text-sm">
          <p><%= videoData.videoViews %>回再生  ・  👍<%= videoData.likeCount %></p>
      </div>
    <div class="flex items-center justify-between">
        <h3 class="text-2xl font-bold"> 
            <%= videoData.videoTitle %> 
        </h3>
        <button class="ml-2 text-blue-500 hover:text-blue-300 text-sm" onclick="toggleDescription(this)">
            折りたたむ
        </button>
    </div>
    <div class="description mt-2">
        <p class="text-base text-gray-300 mt-1"><%- (videoData.videoDes || "").replace(/\n/g, "<br>") %></p>
    </div>
   </div>
              
        
        <div class="sidebar w-1/4 ml-4" id="sidebar">
<div class="sidebar w-1/4 ml-4" id="sidebar">
    <div id="commentBox" class="fixed top-0 right-0 w-1/2 h-full bg-gray-800 p-4 shadow-lg overflow-y-auto comment-box">
        <div class="sticky top-0 bg-gray-800 p-0 z-10">
            <button id="closeComments" class="w-full bg-gray-700 py-2 rounded mb-2">閉じる</button>
        </div>
        <div id="commentContent" class="mt-10">
        </div>
    </div>
</div>

            <div id="dougaBox" class="fixed top-0 right-0 w-1/2 h-full bg-gray-800 p-4 shadow-lg overflow-y-auto related-box">
                <button id="closedouga" class="w-full bg-gray-700 py-2 rounded mb-2">閉じる</button>
                <h3 class="text-lg font-bold">関連動画</h3>
<% if (videoInfo.watch_next_feed?.length) { %>
<% videoInfo.watch_next_feed.forEach(video => { %>
<div class="mt-2 space-y-4">
  <% if (!video) return; %>
  <% if (video.type.endsWith("Video")) { %>
    <div class="bg-gray-800 p-2 rounded">
      <a href="/wkt/watch/<%= video.id %>">
        <img src="/wkt/back/vi/<%= video.id %>/mqdefault.jpg" alt="サムネ" class="w-full h-auto rounded">
      </a>
      <div class="flex items-center mt-2">
        <% if (video.author?.thumbnails.length) { %>
          <a href="/wkt/c/<%= video.author.id %>"><img src="/wkt/back/yt3<%- (new URL(video.author.thumbnails[0].url)).pathname %>" alt="アイコン" class="w-6 h-6 rounded-full"></a>
        <% } %>
        <p class="text-sm text-gray-400 ml-2">
          <a href="/wkt/c/<%= video.author.id %>"><%= video.author.name %></a>
        </p>
      </div>
      <p class="text-sm font-bold mt-1">
        <a href="/wkt/watch/<%= video.id %>"><%= video.title.text %></a>
      </p>
      <p class="text-xs text-gray-400">
        <%= video.short_view_count?.text || video.view_count?.text %>
      </p>
    </div>
  <% } else if (video.type.endsWith("Playlist")) { %>
    <div class="bg-gray-800 p-2 rounded">
      <a href="/wkt/p/<%= video.id %>">
        <img src="/wkt/back/vi/<%= video?.endpoint?.payload?.videoId || video.first_videos[0]?.id %>/mqdefault.jpg" alt="サムネ" class="w-full h-auto rounded">
      </a>
      <p class="text-sm font-bold mt-1">
        <a href="/wkt/p/<%= video.id %>"><%= video.title.text %></a>
      </p>
      <p class="text-xs text-gray-400">動画数: <%= video.video_count?.text %></p>
    </div>
  <% } else if (video.type.endsWith("Channel")) { %>
    <div class="bg-gray-800 p-2 rounded">
      <a href="/wkt/c/<%= video.author.id %>">
        <img src="/wkt/back/yt3<%- (new URL(video.author.thumbnails[0].url)).pathname %>" alt="チャンネルアイコン" class="w-16 h-16 rounded-full mx-auto">
      </a>
      <p class="text-sm font-bold mt-1 text-center">
        <a href="/wkt/c/<%= video.author.id %>" target="_top"><%= video.author.name %></a>
      </p>
      <p class="text-xs text-gray-400 text-center">
        登録者数: <%= video.subscriber_count?.text %>
      </p>
    </div>
  <% } %>
</div>
<% }); %><% } %>
<button id="closedouga2" class="w-full bg-gray-700 py-2 rounded mb-2">閉じる</button>
            </div>
            <button id="hideSidebar" class="w-full bg-gray-700 py-2 rounded">▶ サイドバーを隠す</button>
            <button id="toggleComments" class="mt-4 w-full bg-gray-700 py-2 rounded">コメントを開く</button>
            <button id="toggledouga" class="mt-4 w-full bg-gray-700 py-2 rounded">関連動画を開く</button>
            <button id="togglecontrol" class="mt-4 w-full bg-gray-700 py-2 rounded"><%= baseUrl.replace('https://', '').replace('.glitch.me', '') %></button>
            <div class="mt-4">
<% if (videoInfo.watch_next_feed?.length) { %>
<div class="mt-2 space-y-2">
  <% videoInfo.watch_next_feed.forEach(video => { %>
    <% if (!video) return; %>
    <% if (video.type.endsWith("Video")) { %>
      <div class="bg-gray-800 p-2 rounded">
        <a href="/wkt/watch/<%= video.id %>">
          <img src="/wkt/back/vi/<%= video.id %>/mqdefault.jpg" alt="<%= video.title.text %> のサムネイル" class="w-full h-24 rounded">
        </a>
        <div class="flex items-center mt-2">
          <% if (video.author?.thumbnails.length) { %>
            <a href="/wkt/c/<%= video.author.id %>">
              <img src="/wkt/back/yt3<%- (new URL(video.author.thumbnails[0].url)).pathname %>" alt="<%= video.author.name %> のアイコン" class="w-6 h-6 rounded-full">
            </a>
          <% } %>
          <p class="text-sm text-gray-400 ml-2">
            <a href="/wkt/c/<%= video.author.id %>"><%= video.author.name %></a>
          </p>
        </div>
        <p class="text-sm font-bold mt-1">
          <a href="/wkt/watch/<%= video.id %>"><%= video.title.text %></a>
        </p>
        <p class="text-xs text-gray-400">
          <%= video.short_view_count?.text || video.view_count?.text || '不明' %>
        </p>
      </div>
    <% } else if (video.type.endsWith("Playlist")) { %>
      <div class="bg-gray-800 p-2 rounded">
        <a href="/wkt/p/<%= video.id %>">
          <img src="/wkt/back/vi/<%= video?.endpoint?.payload?.videoId || video.first_videos?.[0]?.id || 'default' %>/mqdefault.jpg" alt="<%= video.title.text %> のサムネイル" class="w-full h-24 rounded">
        </a>
        <p class="text-sm font-bold mt-1">
          <a href="/wkt/p/<%= video.id %>"><%= video.title.text %></a>
        </p>
        <p class="text-xs text-gray-400">動画数: <%= video.video_count?.text || '不明' %></p>
      </div>
    <% } else if (video.type.endsWith("Channel")) { %>
      <div class="bg-gray-800 p-2 rounded">
        <a href="/wkt/c/<%= video.author.id %>">
          <img src="/wkt/back/yt3<%- (new URL(video.author.thumbnails[0].url)).pathname %>" alt="<%= video.author.name %> のチャンネルアイコン" class="w-16 h-16 rounded-full mx-auto">
        </a>
        <p class="text-sm font-bold mt-1 text-center">
          <a href="/wkt/c/<%= video.author.id %>"><%= video.author.name %></a>
        </p>
        <p class="text-xs text-gray-400 text-center">
          登録者数: <%= video.subscriber_count?.text || '非公開' %>
        </p>
      </div>
    <% } %>
  <% }); %>
</div>
<% } %>

            </div>
        </div>
    </div>
              
    <button id="expandSidebar" class="expand-sidebar-btn">◀ サイドバーを開く</button>
          
<script>
document.getElementById("toggleComments").addEventListener("click", function() {
            document.getElementById("commentBox").classList.toggle("open");
        });
        document.getElementById("closeComments").addEventListener("click", function() {
            document.getElementById("commentBox").classList.remove("open");
        });
        document.getElementById("closeComments2").addEventListener("click", function() {
            document.getElementById("commentBox").classList.remove("open");
        });
        document.getElementById("toggledouga").addEventListener("click", function() {
            document.getElementById("dougaBox").classList.toggle("open");
        });
        document.getElementById("closedouga").addEventListener("click", function() {
            document.getElementById("dougaBox").classList.remove("open");
});
document.getElementById("closedouga2").addEventListener("click", function() {
            document.getElementById("dougaBox").classList.remove("open");
});

        function updateSidebarState(hidden) {
            localStorage.setItem("sidebarHidden", hidden);
        }
        
        document.getElementById("hideSidebar").addEventListener("click", function() {
            document.getElementById("sidebar").classList.add("hidden");
            document.getElementById("videoContainer").classList.add("full");
            document.getElementById("expandSidebar").classList.add("visible");
            updateSidebarState(true);
        });
        
        document.getElementById("expandSidebar").addEventListener("click", function() {
            document.getElementById("sidebar").classList.remove("hidden");
            document.getElementById("videoContainer").classList.remove("full");
            this.classList.remove("visible");
            updateSidebarState(false);
        });

async function fetchComments() {
    const commentContainer = document.getElementById("commentContent");
    const errorContainer = document.getElementById("commentError");
    const retryButton = document.getElementById("retryButton");

    commentContainer.innerHTML = "<p>コメントを取得中...</p>";
    errorContainer.style.display = "none";
    retryButton.style.display = "none";

    try {
        const response = await fetch("/wkt/back/comment/<%= videoData.videoId %>");
        if (!response.ok) throw new Error("サーバーエラー");

        const responseText = await response.text();

        commentContainer.innerHTML = responseText;
    } catch (error) {
        console.error("エラー:", error);
        errorContainer.textContent = "コメントの取得に失敗しました: " + error.message;
        errorContainer.style.display = "block";
        retryButton.style.display = "block";
    }
}

document.getElementById("retryButton").addEventListener("click", fetchComments);

fetchComments();
  
        $(document).ready(function() {
            $('#toggleToolbar').click(() => $('#toolbar').addClass('open'));
            $('#closeToolbar').click(() => $('#toolbar').removeClass('open'));
            
            $('#hdToggle').change(function() {
                const video = document.getElementById('video');
                const audio = document.getElementById('audio');
                const videoSrc = document.getElementById('videoSrc');
                
                if (this.checked) {
                    videoSrc.type = "video/webm";
                    videoSrc.src = "<%- videoData.highstreamUrl %>";
                    audio.src = "<%- videoData.stream_url %>";
                    video.load();
                    audio.load();
                    
                    video.addEventListener('loadedmetadata', () => {
                        video.play().catch(error => console.error("動画の再生エラー:", error));
                    });
                    
                    video.addEventListener('play', () => {
                        audio.play().catch(error => console.error("オーディオの再生エラー:", error));
                    });
                    
                    video.addEventListener('pause', () => {
                        audio.pause();
                        audio.currentTime = video.currentTime;
                    });
                    
                    video.addEventListener('ended', () => {
                        audio.pause();
                        audio.currentTime = 0;
                    });
                    
                    video.addEventListener('seeked', () => {
                        video.pause();
                        audio.pause();
                        audio.currentTime = video.currentTime;
                        video.play();
                        audio.play();
                    });
                    
                    video.addEventListener('timeupdate', () => {
                        if (Math.abs(video.currentTime - audio.currentTime) > 0.5) {
                            audio.currentTime = video.currentTime;
                        }
                    });
                } else {
                    videoSrc.type = "video/mp4";
                    videoSrc.src = "<%- videoData.stream_url %>";
                    audio.pause();
                    audio.src = '';
                    video.load();
                    video.play().catch(error => console.error("動画の再生エラー:", error));
                }
            });
        });

const videoId = "<%= videoData.videoId %>";
const channelId = "<%= videoData.channelId %>";
const channelName = "<%= videoData.channelName %>";
const videoTitle = "<%= videoData.videoTitle %>";


function saveToHistory(videoId, channelId, channelName, videoTitle) {
    let history = getHistoryFromCookies();

    const historyIndex = history.findIndex(track => track.videoId === videoId);

    if (historyIndex !== -1) {
        history.splice(historyIndex, 1);
    }

    if (history.length >= 10) {
        history.shift();
    }

    history.push({ videoId, channelId, channelName, videoTitle });

    document.cookie = `wakametubehistory=${encodeURIComponent(JSON.stringify(history))}; path=/; max-age=31536000`;
}

function getHistoryFromCookies() {
    const historyCookie = document.cookie.split('; ').find(row => row.startsWith('wakametubehistory='));
    if (historyCookie) {
        const cookieValue = historyCookie.split('=')[1];
        try {
            return JSON.parse(decodeURIComponent(cookieValue));
        } catch (error) {
            console.error('Error parsing history cookie:', error);
            return [];
        }
    }
    return [];
}
  
function toggleDescription(button) {
    const description = button.closest('div').nextElementSibling;

    if (description.classList.contains('hidden')) {
        description.classList.remove('hidden');
        button.textContent = '折りたたむ';
    } else {
        description.classList.add('hidden');
        button.textContent = '表示する';
    }
}
  
window.addEventListener("load", function() {
    saveToHistory(videoId, channelId, channelName, videoTitle);
});
</script>
</body>
</html>